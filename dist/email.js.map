{"version":3,"sources":["../src/email.ts"],"names":[],"mappings":"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","file":"email.js","sourcesContent":["/*============================================================================\n    Validation Mailer Module\n ============================================================================*/\n\nconst nodemailer = require('nodemailer');\nlet secrets;\ntry {\n    secrets = require('../secrets/secrets.js');\n} catch (e) {\n    // console.log(\"email: unable to require secrets!\", e);\n    try {\n        secrets = require('../../../secrets/secrets.js');\n    } catch (ex) {\n        console.log(\"email: still can't require secrets! I will now exit.\");\n        process.exit(0);\n        secrets = null;\n    }\n}\n// var fs = require(\"fs\");\n\n/*============================================================================\n    Configuration\n ============================================================================*/\n\nlet smtpConfig = {\n    host: process.env.EMAIL_SMTP_HOST || secrets.EMAIL_SMTP_HOST,\n    port: 587,\n    secure: false, // use SSL\n    auth: {\n        user: process.env.EMAIL_SMTP_SENDER || secrets.EMAIL_SMTP_SENDER,\n        pass: process.env.EMAIL_SMTP_PASSWORD || secrets.EMAIL_SMTP_PASSWORD\n    },\n    tls: {\n        rejectUnauthorized:false\n    }\n};\n\n/*============================================================================\n    Functions\n ============================================================================*/\n\nfunction send_report(body, subject, callback){\n\n    console.log(\"SENDING EMAIL REPORT!\");\n\n    let transporter;\n\n    if ((process.env.USE_GMAIL_ACCOUNT || secrets.USE_GMAIL_ACCOUNT) === true){\n        console.log(\"USING GMAIL ACCOUNT!\");\n        transporter = nodemailer.createTransport({\n            service: 'gmail',\n            auth: {\n                user: process.env.EMAIL_SENDER_USER || secrets.EMAIL_SENDER_USER,\n                pass: process.env.EMAIL_SENDER_PASS || secrets.EMAIL_SENDER_PASS\n            }\n        });\n    } else{\n        console.log(\"USING SMTP ACCOUNT!\");\n        transporter = nodemailer.createTransport(smtpConfig);\n    }\n\n    let mailOptions = {\n        from: process.env.EMAIL_SMTP_SENDER || secrets.EMAIL_SMTP_SENDER, // sender address\n        to: process.env.EMAIL_RECEIVER || secrets.EMAIL_RECEIVER, // list of receivers\n        subject: \"Abalobi Validation Report - \" + subject, // Subject line\n        text: body\n    };\n\n    transporter.sendMail(mailOptions, function(error, info){\n        console.log(\"Email Sender: Sending message to: \" + mailOptions.to.toString());\n        if(error){\n            console.log(error);\n            callback()\n        }else{\n            console.log('Message sent: ' + info.response);\n            callback()\n        }\n    });\n}\n\n/*============================================================================\n    Exports\n ============================================================================*/\n\nmodule.exports = {\n    send_report: send_report\n};"]}