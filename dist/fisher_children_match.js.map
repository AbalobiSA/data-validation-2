{"version":3,"sources":["../src/fisher_children_match.ts"],"names":[],"mappings":"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","file":"fisher_children_match.js","sourcesContent":["/**\n * Function to run second check of validation.\n * for this check every fisher_trip record and validate that the amount child records in salesforce\n * corresponds to the amount of child records expected in every record.\n * @param client\n * @param startDate\n * @param endDate\n * @param callback\n */\nconst runTest = (client, startDate, endDate) => {\n    return new Promise((resolve, reject) => {\n        let errors = 0;\n        let logString = \"\";\n\n        console.log(\"Test 3: All Catch records for each Fisher Trip are in SF: \");\n        logString += \"Test 3: All Catch records for each Fisher Trip are in SF: \\n\";\n\n        // Query relevant fields from postgresdb\n        let query = `SELECT num_children_in_sf__c, Id, num_children_expected__c FROM Ablb_Fisher_Trip__c WHERE LastModifiedDate >= ${startDate} AND LastModifiedDate < ${endDate}`;\n        client.query(query, (err, result) => {\n\n            if (err) {\n                console.log(\"fisher children match: an error has occurred: \", err);\n                resolve([logString, err]);\n                return;\n            }\n\n            console.log(result.totalSize + ' trip records were received');\n            logString += result.totalSize + ' trip records were received \\n';\n\n            // For every record verify that the number in salesforce corresponds to the expected value on the record\n            // if not equal flag a error at the relevant record's ID\n            // Note: that if both fields are undefined it is not flagged as error\n            for (let entry in result.records) {\n                if (result.records[entry].num_children_in_sf__c === 0 && (result.records[entry].num_children_expected__c === null || result.records[entry].num_children_expected__c === '')) {\n                    // If there is not data in num_children_expected__c for this record just ignore it\n                    continue;\n                } else if (result.records[entry].num_children_in_sf__c !== result.records[entry].num_children_expected__c && result.records[entry].num_children_in_sf__c !== undefined && result.records[entry].num_children_expected__c !== undefined) {\n                    console.log(\"Error @ sfID \" + result.records[entry].Id);\n                    logString += \"Error @ sfID \" + result.records[entry].Id + \" https://eu5.salesforce.com/\" + result.records[entry].Id + '\\n';\n                    errors += 1;\n                }\n            }\n\n            if (errors === 0) {\n                console.log(\"0 Errors - Test PASSED \\n\");\n                logString += \"0 Errors - Test PASSED \\n\";\n                resolve([logString, errors]);\n            } else {\n                //output the total amount of users who are a mismatch\n                console.log(errors + \" Errors - Test FAILED \\n\");\n                logString += errors + \" Errors - Test FAILED \\n\";\n                resolve([logString, errors]);\n            }\n        });\n    })\n\n\n}\n\n\nexport default runTest;"]}