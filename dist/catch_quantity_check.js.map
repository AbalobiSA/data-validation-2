{"version":3,"sources":["../src/catch_quantity_check.ts"],"names":[],"mappings":"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","file":"catch_quantity_check.js","sourcesContent":["/**\n * A test that checks each catch that has come in and evaluates whether the quantities of\n * of the catch etc. amount sold to coop amount kept add up.\n * @param client\n * @param startDate\n * @param endDate\n * @param callback\n */\nfunction runTest(client, startDate, endDate) {\n\n    return new Promise((resolve, reject) => {\n        let errors = 0;\n        let logString = \"\";\n\n        console.log(\"Test 5: Catch Quanity Check: \");\n        logString += \"Test 5: Catch Quanity Check: \\n\";\n\n        // Query all catches that have come in, in given time period\n        let query = `SELECT Id, coop_price_type__c, other_price_type__c, num_items__c, alloc_coop_number__c, \n            alloc_self_number__c, alloc_sold_number__c, weight_kg__c, alloc_coop_weight_kg__c, alloc_self_weight_kg__c,\n            alloc_sold_weight_kg__c, num_crates__c, alloc_coop_crates__c, alloc_self_crates__c, alloc_sold_crates__c     \n            FROM Ablb_Fisher_Catch__c WHERE LastModifiedDate >= ${startDate} AND LastModifiedDate < ${endDate}`;\n\n        client.query(query, (err, result) => {\n\n            if (err) {\n                console.log(err);\n                return resolve([logString, err]);\n            }\n\n            console.log(result.totalSize + ' catch records were received');\n            logString += result.totalSize + ' catch records were received\\n';\n\n            for (let i = 0; i < result.totalSize; i = i + 1) {\n                // If price type is total batch ignore as quantity will then be irrelevant\n                // If the quantities is not valid flag an error and add id to log with link\n                if (result.records[i].coop_price_type__c !== 'total_batch' && result.records[i].other_price_type__c !== 'total_batch') {\n                    if (!checkQuantity(result.records[i])) {\n                        console.log(\"Error @ sfID \" + result.records[i].Id);\n                        logString += \"Error @ sfID \" + result.records[i].Id + \" https://eu5.salesforce.com/\" + result.records[i].Id + '\\n';\n\n                        errors += 1;\n                    }\n                }\n            }\n\n            if (errors === 0) {\n                console.log(\"0 Errors - Test PASSED \\n\");\n                logString += \"0 Errors - Test PASSED \\n\";\n                resolve([logString, errors]);\n            } else {\n                // Output the total amount of users who are a mismatch\n                console.log(errors + \" Errors - Test FAILED \\n\");\n                logString += errors + \" Errors - Test FAILED \\n\";\n                resolve([logString, errors]);\n            }\n        });\n    })\n\n\n}\n\n/**\n * Check that a quantity of a certain catch adds up\n *\n * @param eachCatch\n * @returns {boolean}\n */\nfunction checkQuantity(eachCatch) {\n\n    let valid = true;\n\n    // Handle sold to coop\n    // Note: -0.00000001 is to avoid floating point (decimal) rounding issues\n    switch (eachCatch.coop_price_type__c) {\n        case 'per_item':\n            if (eachCatch.num_items__c < (-0.00000001 + eachCatch.alloc_coop_number__c + eachCatch.alloc_self_number__c + eachCatch.alloc_sold_number__c)) {\n                valid = false;\n            }\n            break;\n\n        case 'per_kg':\n            if (eachCatch.weight_kg__c < (-0.00000001 + eachCatch.alloc_coop_weight_kg__c + eachCatch.alloc_self_weight_kg__c + eachCatch.alloc_sold_weight_kg__c)) {\n                valid = false;\n            }\n            break;\n\n        case 'per_crate':\n            if (eachCatch.num_crates__c < (-0.00000001 + eachCatch.alloc_coop_crates__c + eachCatch.alloc_self_crates__c + eachCatch.alloc_sold_crates__c)) {\n                valid = false;\n            }\n            break;\n\n        default:\n            break;\n    }\n\n    // Handle sold to other\n    switch (eachCatch.other_price_type__c) {\n        case 'per_item':\n            if (eachCatch.num_items__c < (-0.00000001 + eachCatch.alloc_coop_number__c + eachCatch.alloc_self_number__c + eachCatch.alloc_sold_number__c)) {\n                valid = false;\n            }\n            break;\n\n        case 'per_kg':\n            if (eachCatch.weight_kg__c < (-0.00000001 + eachCatch.alloc_coop_weight_kg__c + eachCatch.alloc_self_weight_kg__c + eachCatch.alloc_sold_weight_kg__c)) {\n                valid = false;\n            }\n            break;\n\n        case 'per_crate':\n            if (eachCatch.num_crates__c < (-0.00000001 + eachCatch.alloc_coop_crates__c + eachCatch.alloc_self_crates__c + eachCatch.alloc_sold_crates__c)) {\n                valid = false;\n            }\n            break;\n\n        default:\n            break;\n    }\n\n    return valid;\n}\n\nmodule.exports = {\n    runTest: runTest\n};\n"]}