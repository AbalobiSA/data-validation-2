{"version":3,"sources":["../src/fisher_user_match.ts"],"names":[],"mappings":"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","file":"fisher_user_match.js","sourcesContent":["/**\n * Function to run first check of validation\n * this check is to guarantee that the fisher who has submitted data from a trip matches up with the username provided on the form.\n * the only exception is a fisher_manager who is allowed to submit someone elses data\n * @param client\n * @param startDate\n * @param endDate\n */\nexport default runTest = (client, startDate, endDate) => {\n\n    return new Promise((resolve, reject) => {\n        let errors = 0;\n\n        // letiable that stores all logging info for individual job\n        let logString = \"\";\n\n        console.log(\"Test 2: Submiting username matches main_fisher:\");\n        logString += \"Test 2: Submiting username matches main_fisher:\\n\";\n\n        // Run a query on the database to pull the main_fisher_id__c and user_id__c fields from the trips table entered in the last 24h\n        let query = `SELECT main_fisher_id__c, user_id__c, Id FROM Ablb_Fisher_Trip__c WHERE LastModifiedDate >= ${startDate} AND LastModifiedDate < ${endDate}`;\n        client.query(query, (err, tripUsers) => {\n            if (err) {\n                resolve([logString, err]);\n            } else {\n                console.log(tripUsers.totalSize + ' trip records were received');\n                logString += tripUsers.totalSize + ' trip records were received\\n';\n\n                query = `SELECT Username__c, abalobi_id__c, abalobi_usertype__c FROM Ablb_User__c`;\n                client.query(query, (err, users) => {\n                    console.log(users.totalSize + ' user records were retrieved');\n                    logString += users.totalSize + ' user records were retrieved\\n';\n\n                    // Scan the array of total users for a match for each of the users_from trip for a match\n                    for (let i = 0; i < tripUsers.records.length; i = i + 1) {\n                        let match = false;\n                        for (let j = 0; j < users.records.length; j = j + 1) {\n                            // Check if the trip's user corresponds to correct abalobi ID and username\n                            // If the main fisher ID matches any user ID and the user ID from the trip matches any Username\n                            if (users.records[j]['abalobi_id__c'] === tripUsers.records[i]['main_fisher_id__c'] && users.records[j]['Username__c'] === tripUsers.records[i]['user_id__c']) {\n                                match = true\n                            } else if (users.records[j]['Username__c'] === tripUsers.records[i]['user_id__c'] && users.records[j]['abalobi_usertype__c'].includes(\"fisher_manager\")) {\n                                match = true;\n                            }\n                        }\n\n                        // If there is no match and the usertype is not a fisher_manager, output which user is incorrect and increment the total amount not found\n                        if (match === false) {\n                            console.log(\"Error:  [Username]: \" + tripUsers.records[i].user_id__c + \" [main_fisher_id]: \"\n                                + tripUsers.records[i].main_fisher_id__c + \"        @ sfID \" + tripUsers.records[i].Id\n                                + \" https://eu5.salesforce.com/\" + tripUsers.records[i].Id + '\\n' +\n                                \"\\n\");\n                            logString += \"Error:  [Username]: \" + tripUsers.records[i].user_id__c + \" [main_fisher_id]: \"\n                                + tripUsers.records[i].main_fisher_id__c + \"        @ sfID \" + tripUsers.records[i].Id\n                                + \" https://eu5.salesforce.com/\" + tripUsers.records[i].Id + '\\n' +\n                                \"\\n\";\n\n                            errors += 1;\n                        }\n                    }\n\n                    if (errors === 0) {\n                        console.log(\"0 Errors - Test PASSED \\n\");\n                        logString += \"0 Errors - Test PASSED \\n\";\n                        resolve([logString, errors]);\n                    } else {\n                        // Output the total amount of users who are a mismatch\n                        console.log(errors + \" Errors - Test FAILED \\r\\n\");\n                        logString += errors + \" Errors - Test FAILED \\n\";\n                        resolve([logString, errors]);\n                    }\n                });\n            }\n        });\n    })\n\n\n}\n"]}